# Tell Travis that we are using Docker 
# so it can install all the necessary dependencies
services:
  - docker
# Build a dev version of the frontend app and test it
before_install:
  - docker build -t valentintanase/react-test -f ./client/Dockerfile.dev ./client
# We use -e CI=true arg in our run command 
# in order for the program to exit with code 0 after
# testing the app such that travis ci knows the test succeded
script:
  - docker run -e CI=true valentintanase/react-test npm test
# If the test script passes sucessfully then build the images 
after_success:
  - docker build -t valentintanase/multi-client ./client
  - docker build -t valentintanase/multi-nginx ./nginx
  - docker build -t valentintanase/multi-server ./server
  - docker build -t valentintanase/multi-worker ./worker
    # Log in to the Docker CLI
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
    # Push the Docker images to DockerHub
  - docker push valentintanase/multi-client
  - docker push valentintanase/multi-nginx
  - docker push valentintanase/multi-server
  - docker push valentintanase/multi-worker

# Deploy script for AWB Elastic Beanstalk
deploy:
  # The AWS service wa went to deploy to
  provider: elasticbeanstalk
  # The current region in use
  region: eu-central-1
  # Nane of the EB app
  app: multi-docker
  # Name of the EB environment
  env: MultiDocker-env
  # Name for the S3 bucket what our app uses
  bucket_name: elasticbeanstalk-eu-central-1-159399571077
  bucket_path: docker-multi
  # Deploy to AWS the master branch only
  on:
    branch: master
  # IAM keys for deployment
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key:
    secure: $AWS_SECRET_KEY